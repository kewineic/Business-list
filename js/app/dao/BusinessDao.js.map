{"version":3,"sources":["../../app-es6/dao/BusinessDao.js"],"names":["BusinessDao","constructor","connection","_connection","_store","add","business","Promise","resolve","reject","request","transaction","objectStore","onsuccess","onerror","console","log","e","target","error","listAll","cursor","openCursor","current","result","data","value","push","Business","_date","_amount","_value","continue","clearAll","clear"],"mappings":"AAAA,MAAMA,WAAN,CAAiB;AACbC,gBAAYC,UAAZ,EAAuB;AACnB,aAAKC,WAAL,GAAmBD,UAAnB;AACA,aAAKE,MAAL,GAAc,UAAd;AACH;;AAEDC,QAAIC,QAAJ,EAAa;AACT,eAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,gBAAIC,UAAU,KAAKP,WAAL,CACTQ,WADS,CACG,CAAC,KAAKP,MAAN,CADH,EACkB,WADlB,EAETQ,WAFS,CAEG,KAAKR,MAFR,EAGTC,GAHS,CAGLC,QAHK,CAAd;;AAKAI,oBAAQG,SAAR,GAAoB,MAAM;AACtBL;AACH,aAFD;;AAIAE,oBAAQI,OAAR,GAAkB,MAAM;AACpBC,wBAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAV,uBAAO,0CAAP;AACH,aAHD;AAIH,SAdM,CAAP;AAeH;;AAEDW,cAAS;AACL,eAAO,IAAIb,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,gBAAIY,SAAS,KAAKlB,WAAL,CACRQ,WADQ,CACI,CAAC,KAAKP,MAAN,CADJ,EACmB,WADnB,EAERQ,WAFQ,CAEI,KAAKR,MAFT,EAGRkB,UAHQ,EAAb;;AAKI,gBAAIhB,WAAW,EAAf;AACAe,mBAAOR,SAAP,GAAmBI,KAAK;AACpB,oBAAIM,UAAUN,EAAEC,MAAF,CAASM,MAAvB;AACA,oBAAGD,OAAH,EAAW;AACP,wBAAIE,OAAOF,QAAQG,KAAnB;AACApB,6BAASqB,IAAT,CAAc,IAAIC,QAAJ,CAAaH,KAAKI,KAAlB,EAAyBJ,KAAKK,OAA9B,EAAuCL,KAAKM,MAA5C,CAAd;AACAR,4BAAQS,QAAR;AACH,iBAJD,MAIK;AACFxB,4BAAQF,QAAR;AACF;AACJ,aATD;;AAWAe,mBAAOP,OAAP,GAAiBG,KAAK;AAClBF,wBAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAV,uBAAO,wCAAP;AACH,aAHD;AAIP,SAtBM,CAAP;AAuBH;;AAEDwB,eAAU;AACN,eAAO,IAAI1B,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,gBAAIC,UAAU,KAAKP,WAAL,CACTQ,WADS,CACG,CAAC,KAAKP,MAAN,CADH,EACkB,WADlB,EAETQ,WAFS,CAEG,KAAKR,MAFR,EAGT8B,KAHS,EAAd;;AAKIxB,oBAAQG,SAAR,GAAoBI,KAAKT,QAAQ,oCAAR,CAAzB;AACAE,oBAAQI,OAAR,GAAkBG,KAAK;AACnBF,wBAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAV,uBAAO,0CAAP;AAEH,aAJD;AAKP,SAZM,CAAP;AAaH;AAhEY","file":"BusinessDao.js","sourcesContent":["class BusinessDao{\r\n    constructor(connection){\r\n        this._connection = connection; \r\n        this._store = 'business'; \r\n    }\r\n\r\n    add(business){\r\n        return new Promise((resolve, reject) => {\r\n            let request = this._connection\r\n                .transaction([this._store], 'readwrite')\r\n                .objectStore(this._store)\r\n                .add(business);\r\n\r\n            request.onsuccess = () => {\r\n                resolve();\r\n            }\r\n\r\n            request.onerror = () => {\r\n                console.log(e.target.error);\r\n                reject('Nao foi possível adicionar a negociaçao.');\r\n            }\r\n        });\r\n    }\r\n\r\n    listAll(){\r\n        return new Promise((resolve, reject) => {\r\n            let cursor = this._connection \r\n                .transaction([this._store], 'readwrite')\r\n                .objectStore(this._store)\r\n                .openCursor();\r\n\r\n                let business = [];\r\n                cursor.onsuccess = e => {\r\n                    let current = e.target.result;\r\n                    if(current){\r\n                        let data = current.value;\r\n                        business.push(new Business(data._date, data._amount, data._value));\r\n                        current.continue();\r\n                    }else{\r\n                       resolve(business);\r\n                    }\r\n                }\r\n\r\n                cursor.onerror = e => {\r\n                    console.log(e.target.error);\r\n                    reject('Nao foi possível listar as negociaçoes')\r\n                }\r\n        });\r\n    }\r\n\r\n    clearAll(){\r\n        return new Promise((resolve, reject) => {\r\n            let request = this._connection\r\n                .transaction([this._store], 'readwrite')\r\n                .objectStore(this._store)\r\n                .clear();\r\n\r\n                request.onsuccess = e => resolve('Negociaçoes removidas com sucesso.');\r\n                request.onerror = e => {\r\n                    console.log(e.target.error);\r\n                    reject('Nao foi possível remover as negociaçoes.');\r\n                    \r\n                }\r\n        });\r\n    }\r\n}"]}