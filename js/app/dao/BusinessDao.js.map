{"version":3,"sources":["../../app-es6/dao/BusinessDao.js"],"names":["Business","BusinessDao","connection","_connection","_store","business","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","onerror","console","log","e","target","error","cursor","openCursor","current","result","data","value","push","_date","_amount","_value","continue","clear"],"mappings":";;;;;;;;;;;;;;;AAAQA,oB,qBAAAA,Q;;;;;;;;;;;;;;;;;;;;;mCAEKC,W;AACT,qCAAYC,UAAZ,EAAuB;AAAA;;AACnB,yBAAKC,WAAL,GAAmBD,UAAnB;AACA,yBAAKE,MAAL,GAAc,UAAd;AACH;;;;wCAEGC,Q,EAAS;AAAA;;AACT,+BAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIC,UAAU,MAAKN,WAAL,CACTO,WADS,CACG,CAAC,MAAKN,MAAN,CADH,EACkB,WADlB,EAETO,WAFS,CAEG,MAAKP,MAFR,EAGTQ,GAHS,CAGLP,QAHK,CAAd;;AAKAI,oCAAQI,SAAR,GAAoB,YAAM;AACtBN;AACH,6BAFD;;AAIAE,oCAAQK,OAAR,GAAkB,YAAM;AACpBC,wCAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,uCAAO,0CAAP;AACH,6BAHD;AAIH,yBAdM,CAAP;AAeH;;;8CAEQ;AAAA;;AACL,+BAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIY,SAAS,OAAKjB,WAAL,CACRO,WADQ,CACI,CAAC,OAAKN,MAAN,CADJ,EACmB,WADnB,EAERO,WAFQ,CAEI,OAAKP,MAFT,EAGRiB,UAHQ,EAAb;;AAKI,gCAAIhB,WAAW,EAAf;AACAe,mCAAOP,SAAP,GAAmB,aAAK;AACpB,oCAAIS,UAAUL,EAAEC,MAAF,CAASK,MAAvB;AACA,oCAAGD,OAAH,EAAW;AACP,wCAAIE,OAAOF,QAAQG,KAAnB;AACApB,6CAASqB,IAAT,CAAc,IAAI1B,QAAJ,CAAawB,KAAKG,KAAlB,EAAyBH,KAAKI,OAA9B,EAAuCJ,KAAKK,MAA5C,CAAd;AACAP,4CAAQQ,QAAR;AACH,iCAJD,MAIK;AACFvB,4CAAQF,QAAR;AACF;AACJ,6BATD;;AAWAe,mCAAON,OAAP,GAAiB,aAAK;AAClBC,wCAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,uCAAO,wCAAP;AACH,6BAHD;AAIP,yBAtBM,CAAP;AAuBH;;;+CAES;AAAA;;AACN,+BAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIC,UAAU,OAAKN,WAAL,CACTO,WADS,CACG,CAAC,OAAKN,MAAN,CADH,EACkB,WADlB,EAETO,WAFS,CAEG,OAAKP,MAFR,EAGT2B,KAHS,EAAd;;AAKItB,oCAAQI,SAAR,GAAoB;AAAA,uCAAKN,QAAQ,oCAAR,CAAL;AAAA,6BAApB;AACAE,oCAAQK,OAAR,GAAkB,aAAK;AACnBC,wCAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,uCAAO,0CAAP;AAEH,6BAJD;AAKP,yBAZM,CAAP;AAaH","file":"BusinessDao.js","sourcesContent":["import {Business} from \"../models/Business.js\";\r\n\r\nexport class BusinessDao{\r\n    constructor(connection){\r\n        this._connection = connection; \r\n        this._store = 'business'; \r\n    }\r\n\r\n    add(business){\r\n        return new Promise((resolve, reject) => {\r\n            let request = this._connection\r\n                .transaction([this._store], 'readwrite')\r\n                .objectStore(this._store)\r\n                .add(business);\r\n\r\n            request.onsuccess = () => {\r\n                resolve();\r\n            }\r\n\r\n            request.onerror = () => {\r\n                console.log(e.target.error);\r\n                reject('Nao foi possível adicionar a negociaçao.');\r\n            }\r\n        });\r\n    }\r\n\r\n    listAll(){\r\n        return new Promise((resolve, reject) => {\r\n            let cursor = this._connection \r\n                .transaction([this._store], 'readwrite')\r\n                .objectStore(this._store)\r\n                .openCursor();\r\n\r\n                let business = [];\r\n                cursor.onsuccess = e => {\r\n                    let current = e.target.result;\r\n                    if(current){\r\n                        let data = current.value;\r\n                        business.push(new Business(data._date, data._amount, data._value));\r\n                        current.continue();\r\n                    }else{\r\n                       resolve(business);\r\n                    }\r\n                }\r\n\r\n                cursor.onerror = e => {\r\n                    console.log(e.target.error);\r\n                    reject('Nao foi possível listar as negociaçoes')\r\n                }\r\n        });\r\n    }\r\n\r\n    clearAll(){\r\n        return new Promise((resolve, reject) => {\r\n            let request = this._connection\r\n                .transaction([this._store], 'readwrite')\r\n                .objectStore(this._store)\r\n                .clear();\r\n\r\n                request.onsuccess = e => resolve('Negociaçoes removidas com sucesso.');\r\n                request.onerror = e => {\r\n                    console.log(e.target.error);\r\n                    reject('Nao foi possível remover as negociaçoes.');\r\n                    \r\n                }\r\n        });\r\n    }\r\n}"]}